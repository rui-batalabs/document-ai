<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Include jsPDF library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
</head>
<body class="bg-gray-100 min-h-screen">

    <!-- Main Content -->
    <div class="container mx-auto py-8">
        <!-- Upload Document Section -->
        <div class="bg-white shadow-md rounded p-6 mb-6 text-center">
            <h2 class="text-2xl font-semibold mb-4">Upload a Document</h2>
            {{#if error}}
                <h1 class="text-2xl font-semibold mb-4 font-bold text-red-600 text-6xl">Error: {{error}}</h1>
                {{/if}}
            <form id="upload-form" action="/dashboard/upload" method="POST" enctype="multipart/form-data" class="flex flex-col items-start space-y-4">
                <input type="file" name="document" accept=".pdf,.doc,.docx,.txt" required
                       class="block text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100">
                <button id="upload-button" type="submit"
                        class="bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:ring-2 focus:ring-blue-500 flex items-center">
                    <span class="spinner hidden w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-2"></span>
                    <span>Upload</span>
                </button>
            </form>
        </div>

        <!-- Document List -->
        <div class="bg-white shadow-md rounded p-6">
            <div class="flex justify-between items-center">
                <h2 class="text-2xl font-semibold mb-4">Your Documents</h2>
                <button id="export-pdf" class="bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 focus:ring-2 focus:ring-green-500">
                    Export as PDF
                </button>
            </div>
            {{#if documents.length}}
                <table id="document-table" class="table-auto w-full text-left border-collapse">
                    <thead>
                        <tr class="bg-gray-200">
                            <th class="px-4 py-2">Filename</th>
                            <th class="px-4 py-2">Uploaded At</th>
                            <th class="px-4 py-2">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each documents}}
                            <!-- Document Row -->
                            <tr>
                                <td class="border px-4 py-2">{{this.filename}}</td>
                                <td class="border px-4 py-2">{{this.uploadDate}}</td>
                                <td class="border px-4 py-2">
                                    <form action="/chat/{{this._id}}" method="GET" style="display: inline;">
                                        <button type="submit" class="text-blue-500 hover:underline">Chat</button>
                                    </form>
                                    |
                                    <a href="/dashboard/download/{{this._id}}" class="text-blue-500 hover:underline">Download</a> |
                                    <a href="/dashboard/delete/{{this._id}}" class="text-red-500 hover:underline">Delete</a>
                                </td>
                            </tr>
                            <!-- Insights Row -->
                            <tr>
                                <td colspan="3" class="border px-4 py-2 bg-gray-50">
                                    <h3 class="text-lg font-semibold mb-2">Insights</h3>
                                    <ul class="list-disc pl-5 text-gray-700">
                                        <li>Word Count: {{this.metadata.wordCount}}</li>
                                        <li>Summary: {{this.metadata.summary}}</li>
                                    </ul>
                                </td>
                            </tr>
                        {{/each}}
                    </tbody>
                </table>
            {{else}}
                <p class="text-gray-500">No documents uploaded yet.</p>
            {{/if}}
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const uploadForm = document.getElementById('upload-form');
            const uploadButton = document.getElementById('upload-button');
            const spinner = uploadButton.querySelector('.spinner');
            const buttonText = uploadButton.querySelector('span:last-child');

            // Spinner logic during upload
            uploadForm.addEventListener('submit', (e) => {
                spinner.classList.remove('hidden');
                buttonText.textContent = 'Uploading...';
                uploadButton.disabled = true;
            });

            // Export PDF functionality
            const exportPdfButton = document.getElementById('export-pdf');
            exportPdfButton.addEventListener('click', async () => {
                const { jsPDF } = window.jspdf;
                const table = document.getElementById('document-table');

                if (!window.html2canvas) {
                    console.error("html2canvas is not loaded. Ensure it is included in your project.");
                    return;
                }

                const doc = new jsPDF({
                    orientation: 'portrait',
                    unit: 'mm',
                    format: 'a4',
                });

                const pageWidth = doc.internal.pageSize.getWidth();
                const pageHeight = doc.internal.pageSize.getHeight();

                try {
                    const canvas = await html2canvas(table, {
                        scale: 2,
                    });

                    const imgData = canvas.toDataURL('image/png');

                    const canvasWidth = canvas.width;
                    const canvasHeight = canvas.height;
                    const aspectRatio = canvasWidth / canvasHeight;

                    let pdfWidth = pageWidth - 20;
                    let pdfHeight = pdfWidth / aspectRatio;

                    if (pdfHeight > pageHeight - 20) {
                        pdfHeight = pageHeight - 20;
                        pdfWidth = pdfHeight * aspectRatio;
                    }

                    const xOffset = (pageWidth - pdfWidth) / 2;
                    const yOffset = (pageHeight - pdfHeight) / 2;

                    doc.addImage(imgData, 'PNG', xOffset, yOffset, pdfWidth, pdfHeight);
                    doc.save('documents.pdf');
                } catch (error) {
                    console.error('Error exporting as PDF:', error);
                }
            });
        });
    </script>


</body>
</html>
